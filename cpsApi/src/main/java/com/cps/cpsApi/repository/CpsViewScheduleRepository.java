package com.cps.cpsApi.repository;

import com.cps.cpsApi.entity.CpsViewEntity;
import io.lettuce.core.dynamic.annotation.Param;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

public interface CpsViewScheduleRepository extends JpaRepository<CpsViewEntity, String> {
    @Query(value = "INSERT INTO SUMMARY_HOUR (REG_DAY, REG_YM, REG_HOUR, CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS, CNT, TYPE) " +
            "SELECT REG_DAY, SUBSTR(REG_DAY,1,6) AS REG_YM,  REG_HOUR, " +
            "       CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS, COUNT(1) AS CNT, TYPE  " +
            "  FROM CPS_VIEW " +
            " WHERE REG_DAY = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL :minutes MINUTE), '%Y%m%d') " +
            " GROUP BY CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS " +
            "    ON DUPLICATE KEY UPDATE CNT = VALUES(CNT), MOD_DATE = NOW() ", nativeQuery = true)
    void insertSummaryViewHour(@Param("minutes") int minutes);


    @Query(value = "INSERT INTO SUMMARY_HOUR (REG_DAY, REG_YM, REG_HOUR, CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS, CLICK_CNT, TYPE) " +
            "SELECT REG_DAY, SUBSTR(REG_DAY,1,6) AS REG_YM,  REG_HOUR, " +
            "       CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS, COUNT(1) AS CLICK_CNT, TYPE  " +
            "  FROM CPS_CLICK " +
            " WHERE REG_DAY = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL :minutes MINUTE), '%Y%m%d') " +
            " GROUP BY CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS " +
            "    ON DUPLICATE KEY UPDATE CLICK_CNT = VALUES(CLICK_CNT), MOD_DATE = NOW() ", nativeQuery = true)
    void insertSummaryClickHour(@Param("minutes") int minutes);

    @Query(value = "INSERT INTO SUMMARY_HOUR (REG_DAY, REG_YM, REG_HOUR, CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS  " +
            "       , REWARD_CNT, CONFIRM_REWARD_CNT, CANCEL_REWARD_CNT " +
            "       , PRODUCT_PRICE, CONFIRM_PRODUCT_PRICE, CANCEL_PRODUCT_PRICE " +
            "       , COMMISSION, COMFIRM_COMMISSION, CANCEL_COMMISSION, COMMISSION_PROFIT, COMFIRM_COMMISSION_PROFIT, CANCEL_COMMISSION_PROFIT " +
            "       , AFFLIATE_COMMISSION, COMFIRM_AFFLIATE_COMMISSION, CANCEL_AFFLIATE_COMMISSION, USER_COMMISSION, COMFIRM_USER_COMMISSION, CANCEL_USER_COMMISSION " +
            "       , TYPE )" +
            "SELECT A.REG_DAY, SUBSTR(A.REG_DAY,1,6) AS REG_YM,  A.REG_HOUR" +
            "     , A.CAMPAIGN_NUM, A.MEMBER_ID, A.AGENCY_ID, A.AFFLIATE_ID, A.ZONE_ID, A.SITE, A.OS  " +
            "     , SUM(A.REWARD_CNT) AS REWARD_CNT, SUM(A.CONFIRM_REWARD_CNT) AS CONFIRM_REWARD_CNT, SUM(A.CANCEL_REWARD_CNT) AS CANCEL_REWARD_CNT " +
            "     , SUM(A.PRODUCT_PRICE) AS PRODUCT_PRICE, SUM(A.CONFIRM_PRODUCT_PRICE) AS CONFIRM_PRODUCT_PRICE, SUM(A.CANCEL_PRODUCT_PRICE) AS CANCEL_PRODUCT_PRICE " +
            "     , SUM(A.COMMISSION) AS COMMISSION, SUM(A.COMFIRM_COMMISSION) AS COMFIRM_COMMISSION, SUM(A.CANCEL_COMMISSION) AS CANCEL_COMMISSION " +
            "     , SUM(A.COMMISSION_PROFIT) AS COMMISSION_PROFIT, SUM(A.COMFIRM_COMMISSION_PROFIT) AS COMFIRM_COMMISSION_PROFIT, SUM(A.CANCEL_COMMISSION_PROFIT) AS CANCEL_COMMISSION_PROFIT " +
            "     , SUM(A.AFFLIATE_COMMISSION) AS AFFLIATE_COMMISSION, SUM(A.COMFIRM_AFFLIATE_COMMISSION) AS COMFIRM_AFFLIATE_COMMISSION, SUM(A.CANCEL_AFFLIATE_COMMISSION) AS CANCEL_AFFLIATE_COMMISSION " +
            "     , SUM(A.USER_COMMISSION) AS USER_COMMISSION, SUM(A.COMFIRM_USER_COMMISSION) AS COMFIRM_USER_COMMISSION, SUM(A.CANCEL_USER_COMMISSION) AS CANCEL_USER_COMMISSION " +
            "     , A.TYPE " +
            "  FROM ( " +
            "        SELECT REG_DAY, REG_HOUR, CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS,  " +
            "               COUNT(1) AS REWARD_CNT," +
            "               CASE WHEN STATUS = 210 THEN COUNT(1) ELSE 0 END AS CONFIRM_REWARD_CNT," +
            "               CASE WHEN STATUS = 310 THEN COUNT(1) ELSE 0 END AS CANCEL_REWARD_CNT, " +
            "               SUM(PRODUCT_PRICE) AS PRODUCT_PRICE," +
            "               CASE WHEN STATUS = 210 THEN SUM(PRODUCT_PRICE) ELSE 0 END AS CONFIRM_PRODUCT_PRICE," +
            "               CASE WHEN STATUS = 310 THEN SUM(PRODUCT_PRICE) ELSE 0 END AS CANCEL_PRODUCT_PRICE, " +
            "               SUM(COMMISSION) AS COMMISSION," +
            "               CASE WHEN STATUS = 210 THEN SUM(COMMISSION) ELSE 0 END AS COMFIRM_COMMISSION," +
            "               CASE WHEN STATUS = 310 THEN SUM(COMMISSION) ELSE 0 END AS CANCEL_COMMISSION, " +
            "               SUM(COMMISSION_PROFIT) AS COMMISSION_PROFIT, " +
            "               CASE WHEN STATUS = 210 THEN SUM(COMMISSION_PROFIT) ELSE 0 END AS COMFIRM_COMMISSION_PROFIT," +
            "               CASE WHEN STATUS = 310 THEN SUM(COMMISSION_PROFIT) ELSE 0 END AS CANCEL_COMMISSION_PROFIT, " +
            "               SUM(AFFLIATE_COMMISSION) AS AFFLIATE_COMMISSION,  " +
            "               CASE WHEN STATUS = 210 THEN SUM(AFFLIATE_COMMISSION) ELSE 0 END AS COMFIRM_AFFLIATE_COMMISSION," +
            "               CASE WHEN STATUS = 310 THEN SUM(AFFLIATE_COMMISSION) ELSE 0 END AS CANCEL_AFFLIATE_COMMISSION, " +
            "               SUM(USER_COMMISSION) AS USER_COMMISSION, " +
            "               CASE WHEN STATUS = 210 THEN SUM(USER_COMMISSION) ELSE 0 END AS COMFIRM_USER_COMMISSION, " +
            "               CASE WHEN STATUS = 310 THEN SUM(USER_COMMISSION) ELSE 0 END AS CANCEL_USER_COMMISSION, " +
            "               TYPE" +
            "          FROM CPS_REWARD " +
            "         WHERE REG_DAY = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL :minutes MINUTE), '%Y%m%d') " +
            "         GROUP BY CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS, STATUS  )A " +
            " GROUP BY A.REG_DAY, A.REG_HOUR, A.CAMPAIGN_NUM, A.MEMBER_ID, A.AGENCY_ID, A.AFFLIATE_ID, A.ZONE_ID, A.SITE, A.OS" +
            "    ON DUPLICATE KEY UPDATE REWARD_CNT = VALUES(REWARD_CNT), CONFIRM_REWARD_CNT = VALUES(CONFIRM_REWARD_CNT), CANCEL_REWARD_CNT = VALUES(CANCEL_REWARD_CNT) " +
            "     ,  COMMISSION = VALUES(COMMISSION), COMFIRM_COMMISSION = VALUES(COMFIRM_COMMISSION), CANCEL_COMMISSION = VALUES(CANCEL_COMMISSION) " +
            "     ,  PRODUCT_PRICE = VALUES(PRODUCT_PRICE), CONFIRM_PRODUCT_PRICE = VALUES(CONFIRM_PRODUCT_PRICE), CANCEL_PRODUCT_PRICE = VALUES(CANCEL_PRODUCT_PRICE) " +
            "     ,  COMMISSION_PROFIT = VALUES(COMMISSION_PROFIT), COMFIRM_COMMISSION_PROFIT = VALUES(COMFIRM_COMMISSION_PROFIT), CANCEL_COMMISSION_PROFIT = VALUES(CANCEL_COMMISSION_PROFIT) " +
            "     ,  AFFLIATE_COMMISSION = VALUES(AFFLIATE_COMMISSION), COMFIRM_AFFLIATE_COMMISSION = VALUES(COMFIRM_AFFLIATE_COMMISSION), CANCEL_AFFLIATE_COMMISSION = VALUES(CANCEL_AFFLIATE_COMMISSION) " +
            "     ,  USER_COMMISSION = VALUES(USER_COMMISSION), COMFIRM_USER_COMMISSION = VALUES(COMFIRM_USER_COMMISSION), CANCEL_USER_COMMISSION = VALUES(CANCEL_USER_COMMISSION), MOD_DATE = NOW()  "
                  , nativeQuery = true)
    void insertSummaryRewardHour(@Param("minutes") int minutes);

    @Query(value = "INSERT INTO SUMMARY_DAY (REG_DAY, REG_YM, CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS " +
            "                              , CNT, CLICK_CNT, REWARD_CNT, CONFIRM_REWARD_CNT, CANCEL_REWARD_CNT, PRODUCT_PRICE, CONFIRM_PRODUCT_PRICE, CANCEL_PRODUCT_PRICE " +
            "                              , COMMISSION, COMFIRM_COMMISSION, CANCEL_COMMISSION, COMMISSION_PROFIT, COMFIRM_COMMISSION_PROFIT, CANCEL_COMMISSION_PROFIT  " +
            "                              , AFFLIATE_COMMISSION, COMFIRM_AFFLIATE_COMMISSION, CANCEL_AFFLIATE_COMMISSION, USER_COMMISSION, COMFIRM_USER_COMMISSION, CANCEL_USER_COMMISSION  " +
            "                              , CAMPAIGN_NAME, MEMBER_NAME, AGENCY_NAME, AFFLIATE_NAME, TYPE)  " +
            "SELECT A.REG_DAY, A.REG_YM,  " +
            "       A.CAMPAIGN_NUM, A.MEMBER_ID, A.AGENCY_ID, A.AFFLIATE_ID, A.ZONE_ID, A.SITE, A.OS , SUM(A.CNT) AS CNT, SUM(A.CLICK_CNT) AS CLICK_CNT, " +
            "       SUM(A.REWARD_CNT) AS REWARD_CNT, SUM(A.CONFIRM_REWARD_CNT) AS CONFIRM_REWARD_CNT,  SUM(A.CANCEL_REWARD_CNT) AS CANCEL_REWARD_CNT, " +
            "       SUM(A.PRODUCT_PRICE) AS PRODUCT_PRICE, SUM(A.CONFIRM_PRODUCT_PRICE) AS CONFIRM_PRODUCT_PRICE,  SUM(A.CANCEL_PRODUCT_PRICE) AS CANCEL_PRODUCT_PRICE, " +
            "       SUM(A.COMMISSION) AS COMMISSION, SUM(A.COMFIRM_COMMISSION) AS COMFIRM_COMMISSION,  SUM(A.CANCEL_COMMISSION) AS CANCEL_COMMISSION, " +
            "       SUM(A.COMMISSION_PROFIT) AS COMMISSION_PROFIT, SUM(A.COMFIRM_COMMISSION_PROFIT) AS COMFIRM_COMMISSION_PROFIT,  SUM(A.CANCEL_COMMISSION_PROFIT) AS CANCEL_COMMISSION_PROFIT,  " +
            "       SUM(A.AFFLIATE_COMMISSION) AS AFFLIATE_COMMISSION, SUM(A.COMFIRM_AFFLIATE_COMMISSION) AS COMFIRM_AFFLIATE_COMMISSION,  SUM(A.CANCEL_AFFLIATE_COMMISSION) AS CANCEL_AFFLIATE_COMMISSION,  " +
            "       SUM(A.USER_COMMISSION) AS USER_COMMISSION, SUM(A.COMFIRM_USER_COMMISSION) AS COMFIRM_USER_COMMISSION,  SUM(A.CANCEL_USER_COMMISSION) AS CANCEL_USER_COMMISSION,  " +
            "       (SELECT C.CAMPAIGN_NAME FROM CPS_CAMPAIGN C WHERE C.CAMPAIGN_NUM = A.CAMPAIGN_NUM) AS CAMPAIGN_NAME, " +
            "       (SELECT C.MEMBER_NAME FROM CPS_MEMBER C WHERE C.MEMBER_ID = A.MEMBER_ID AND C.TYPE = 'MEMBER') AS MEMBER_NAME, " +
            "       (SELECT C.MEMBER_NAME FROM CPS_MEMBER C WHERE C.MEMBER_ID = A.AGENCY_ID AND C.TYPE = 'AGENCY') AS AGENCY_NAME, " +
            "       (SELECT C.MEMBER_NAME FROM CPS_MEMBER C WHERE C.MEMBER_ID = A.AFFLIATE_ID AND C.TYPE = 'AFFLIATE') AS AFFLIATE_NAME, " +
            "       IFNULL((SELECT C.TYPE FROM CPS_MEMBER C WHERE C.MEMBER_ID = A.MEMBER_ID),'NON_TYPE') AS TYPE " +
            "  FROM SUMMARY_HOUR A" +
            " WHERE A.REG_DAY = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL :minutes MINUTE), '%Y%m%d') " +
            " GROUP BY A.CAMPAIGN_NUM, A.MEMBER_ID, A.AGENCY_ID, A.AFFLIATE_ID, A.ZONE_ID, A.SITE, A.OS " +
            "    ON DUPLICATE KEY UPDATE CNT = VALUES(CNT), CLICK_CNT = VALUES(CLICK_CNT), REWARD_CNT = VALUES(REWARD_CNT), CONFIRM_REWARD_CNT = VALUES(CONFIRM_REWARD_CNT), CANCEL_REWARD_CNT = VALUES(CANCEL_REWARD_CNT) " +
            "     , COMMISSION = VALUES(COMMISSION), COMFIRM_COMMISSION = VALUES(COMFIRM_COMMISSION), CANCEL_COMMISSION = VALUES(CANCEL_COMMISSION) "+
            "     , PRODUCT_PRICE = VALUES(PRODUCT_PRICE), CONFIRM_PRODUCT_PRICE = VALUES(CONFIRM_PRODUCT_PRICE), CANCEL_PRODUCT_PRICE = VALUES(CANCEL_PRODUCT_PRICE) "+
            "     , COMMISSION_PROFIT = VALUES(COMMISSION_PROFIT), COMFIRM_COMMISSION_PROFIT = VALUES(COMFIRM_COMMISSION_PROFIT) "+", CANCEL_COMMISSION_PROFIT = VALUES(CANCEL_COMMISSION_PROFIT) " +
            "     , AFFLIATE_COMMISSION = VALUES(AFFLIATE_COMMISSION), COMFIRM_AFFLIATE_COMMISSION = VALUES(COMFIRM_AFFLIATE_COMMISSION), CANCEL_AFFLIATE_COMMISSION = VALUES(CANCEL_AFFLIATE_COMMISSION), USER_COMMISSION = VALUES(USER_COMMISSION), COMFIRM_USER_COMMISSION = VALUES(COMFIRM_USER_COMMISSION), CANCEL_USER_COMMISSION = VALUES(CANCEL_USER_COMMISSION) " +
            "     , MOD_DATE = NOW() ", nativeQuery = true)
    void insertSummaryViewDay(@Param("minutes") int minutes);

    @Query(value = "INSERT INTO SUMMARY_DAY (REG_DAY, REG_YM, CAMPAIGN_NUM, MEMBER_ID, AGENCY_ID, AFFLIATE_ID, ZONE_ID, SITE, OS, CLICK_CNT, TYPE) " +
            "SELECT A.REG_DAY, A.REG_YM, A.CAMPAIGN_NUM, A.MEMBER_ID, A.AGENCY_ID, A.AFFLIATE_ID, A.ZONE_ID, A.SITE, A.OS, SUM(A.CLICK_CNT) AS CLICK_CNT, " +
            "       IFNULL((SELECT C.TYPE FROM CPS_MEMBER C WHERE C.MEMBER_ID = A.MEMBER_ID),'NON_TYPE') AS TYPE " +
            "  FROM SUMMARY_HOUR A" +
            " WHERE A.REG_DAY = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL :minutes MINUTE), '%Y%m%d') " +
            " GROUP BY A.CAMPAIGN_NUM, A.MEMBER_ID, A.AGENCY_ID, A.AFFLIATE_ID, A.ZONE_ID, A.SITE, A.OS " +
            "    ON DUPLICATE KEY UPDATE CLICK_CNT = VALUES(CLICK_CNT), MOD_DATE = NOW() ",
            nativeQuery = true)
    void insertSummaryClickDay(@Param("minutes") int minutes);
}
